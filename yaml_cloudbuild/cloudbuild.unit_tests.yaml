steps:

# Trigger unit tests for the backend.
- id: backend_unit_tests
  name: 'gcr.io/cloud-builders/mvn'
  args: ['-P', 'test','clean', 'test']
  dir: "backend"

# Trigger coverage tests for the backend.
- id: backend_coverage_report
  name: 'gcr.io/cloud-builders/mvn'
  args: ['jacoco:report']
  dir: "backend"

# Prepare frontend environment for unit testing.
- id: 'frontend_install_dependencies'
  name: 'buildkite/puppeteer'
  args: ['npm', 'install']
  dir: "frontend/rolecall"

# Trigger unit tests for the front.
- id: frontend_unit_tests
  name: 'buildkite/puppeteer'
  args: ['npm', 'run', 'test']
  dir: "frontend/rolecall"

# Trigger unit tests with coverage for the front.
- id: frontend_coverage_report
  name: 'buildkite/puppeteer'
  args: ['npm', 'run', 'coverage']
  dir: "frontend/rolecall"

# Upload generated coverage tests data.
- id: upload_coverage_data
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: bash
  args: ['-c', 'bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy -X fix -F unittests']
  env:
    - 'VCS_COMMIT_ID=$COMMIT_SHA'
    - 'VCS_BRANCH_NAME=$BRANCH_NAME'
    - 'CI_BUILD_ID=$BUILD_ID'
    - 'CODECOV_TOKEN=$_CODECOV_TOKEN'  
