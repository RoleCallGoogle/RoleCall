steps:
# Get rolecall user password from secret key and add to environment
- id: get_db_password
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: [ '-c', '_DB_PASSWORD=$(gcloud secrets versions access latest --secret=rolecall_user_password)' ]

# Move the correct yaml files for this build
# into the correct places for deployment
- id: configure_yamls
  name: 'gcr.io/cloud-builders/npm'
  args: ["run", "configureYamls", "app_frontend_test.yaml", "app_backend_test.yaml"]

# Clean and build the backend, then deploy to GAE backend service
- id: build_and_deploy_backend
  name: "gcr.io/cloud-builders/mvn"
  args: ["-P", "prod", "-f", "backend/pom.xml", "-D", "skipTests", "clean", "package", "appengine:deploy"]
  env:
    - '_DB_INSTANCE= rolecall-cloudsql'
    - '_DB_NAME= rolecall_db'
    - '_DB_USER= rolecall'
  waitFor:
  - get_db_password
  - configure_yamls

# Install the npm packages for angular
- id: install_packages
  name: 'gcr.io/cloud-builders/npm'
  args:
  - 'run'
  - 'installAng'

# Build the angular app for production and put the compiled
# files in the dist/ folder
- id: prerender_browser_files
  name: 'gcr.io/cloud-builders/npm'
  args:
  - 'run'
  - 'buildAng'
  waitFor:
  - install_packages

# Deploy the angular app under the frontend service
- name: "gcr.io/cloud-builders/gcloud"
  args: ["app", "deploy", "app.yaml"]
  waitFor:
  - configure_yamls
  - prerender_browser_files
timeout: "1600s"